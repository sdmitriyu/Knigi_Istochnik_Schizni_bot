import asyncio
import os
import sys
import traceback
from typing import Any, Dict, List

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ UTF-8 –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏ Windows
if sys.platform == "win32":
    os.system("chcp 65001")

from aiogram import Bot, Dispatcher, F
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage
from dotenv import load_dotenv
from aiogram.types import BotCommand, BotCommandScopeAllPrivateChats

from config.handlers import router
from admin.state_book_handlers import admin_router
from admin.edit_texts_handlers import admin_texts_router
from admin.edit_great import admin_great_router
from admin.rigister_admin import register_admin_router
from data.models import db, Books, Order, Greeting, Admin, GalleryText, OrderPretext, OrderStatus, Dialog
from aiogram.filters import Command
from config.keyboards import commands
from config.logger_config import setup_logger, log_error, log_info, log_debug, log_warning

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logger = setup_logger('main')

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv(".env")
TOKEN = os.getenv("TOKEN")

if TOKEN is None:
    log_error(logger, ValueError("TOKEN environment variable not set. Please create a .env file with TOKEN=YOUR_BOT_TOKEN"))
    raise ValueError("TOKEN environment variable not set. Please create a .env file with TOKEN=YOUR_BOT_TOKEN")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤
log_debug(logger, "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤")
dp.include_router(admin_texts_router)
dp.include_router(admin_great_router)
dp.include_router(register_admin_router)
dp.include_router(admin_router)
dp.include_router(router)

log_debug(logger, f"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∫–æ–º–∞–Ω–¥ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ", {"keyboard": commands.keyboard})

def initialize_database_and_data():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    try:
        log_info(logger, "–ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
        log_debug(logger, "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü")
        db.create_tables([
            Books, 
            Order, 
            Greeting, 
            Admin, 
            GalleryText, 
            OrderPretext, 
            OrderStatus, 
            Dialog
        ], safe=True)

        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º (–µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ)
        try:
            log_debug(logger, "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã order_statuses")
            db.execute_sql('CREATE TABLE IF NOT EXISTS order_statuses (id INTEGER PRIMARY KEY, name VARCHAR(255) UNIQUE, description TEXT, client_message TEXT, emoji VARCHAR(255));')
        except Exception as e:
            log_warning(logger, f"–¢–∞–±–ª–∏—Ü–∞ order_statuses —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {str(e)}")
            log_debug(logger, f"Traceback: {traceback.format_exc()}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü—É admin
        try:
            log_debug(logger, "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü—É admin")
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫
            cursor = db.execute_sql("PRAGMA table_info(admin);")
            columns = [column[1] for column in cursor.fetchall()]
            log_debug(logger, f"–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ admin: {columns}")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É role –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
            if 'role' not in columns:
                log_info(logger, "–î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É role –≤ —Ç–∞–±–ª–∏—Ü—É admin")
                db.execute_sql('ALTER TABLE admin ADD COLUMN role VARCHAR(255) DEFAULT "admin";')
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É display_name –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
            if 'display_name' not in columns:
                log_info(logger, "–î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É display_name –≤ —Ç–∞–±–ª–∏—Ü—É admin")
                db.execute_sql('ALTER TABLE admin ADD COLUMN display_name VARCHAR(255);')
        except Exception as e:
            log_error(logger, e, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ/–¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–ª–æ–Ω–æ–∫")
            log_debug(logger, f"Traceback: {traceback.format_exc()}")

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–∞
        log_debug(logger, "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–∞")
        for status_data in OrderStatus.get_default_statuses():
            try:
                OrderStatus.get_or_create(name=status_data['name'], defaults=status_data)
                log_debug(logger, f"–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ —Å–æ–∑–¥–∞–Ω/–æ–±–Ω–æ–≤–ª–µ–Ω: {status_data['name']}")
            except Exception as e:
                log_error(logger, e, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ {status_data['name']}")
                log_debug(logger, f"Traceback: {traceback.format_exc()}")

        # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        try:
            log_debug(logger, "–°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
            Admin.get_or_create(
                user_id=5069224643,
                defaults={
                    'user_name': 'Dmitriy_hrist_muz', 
                    'phone': '0', 
                    'role': 'tech_support', 
                    'display_name': '–î–º–∏—Ç—Ä–∏–π (–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞)'
                }
            )
        except Exception as e:
            log_error(logger, e, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
            log_debug(logger, f"Traceback: {traceback.format_exc()}")
            # –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–∞–ø—Ä—è–º—É—é
            try:
                log_debug(logger, "–ü–æ–ø—ã—Ç–∫–∞ –ø—Ä—è–º–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
                db.execute_sql('''
                    INSERT OR IGNORE INTO admin (user_id, user_name, phone, role, display_name)
                    VALUES (5069224643, 'Dmitriy_hrist_muz', '0', 'tech_support', '–î–º–∏—Ç—Ä–∏–π (–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞)');
                ''')
            except Exception as e2:
                log_error(logger, e2, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä—è–º–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
                log_debug(logger, f"Traceback: {traceback.format_exc()}")

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è
        try:
            log_debug(logger, "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –ø–æ–ª–µ–π")
            # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
            Greeting.get_or_create(
                id=1,
                defaults={'text': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –∫–Ω–∏–∂–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω! üìö\n\n–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:\n- –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥ –∫–Ω–∏–≥\n- –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑\n- –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π\n- –ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å'}
            )
            log_debug(logger, "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–æ–∑–¥–∞–Ω–æ/–æ–±–Ω–æ–≤–ª–µ–Ω–æ")
            
            # –¢–µ–∫—Å—Ç –≥–∞–ª–µ—Ä–µ–∏
            GalleryText.get_or_create(
                id=1,
                defaults={'text': 'üìö *–ù–∞—à –∫–∞—Ç–∞–ª–æ–≥ –∫–Ω–∏–≥*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–∏–≥—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.'}
            )
            log_debug(logger, "–¢–µ–∫—Å—Ç –≥–∞–ª–µ—Ä–µ–∏ —Å–æ–∑–¥–∞–Ω/–æ–±–Ω–æ–≤–ª–µ–Ω")
            
            # –¢–µ–∫—Å—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
            OrderPretext.get_or_create(
                id=1,
                defaults={'text': 'üì¶ *–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞*\n\n–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ:'}
            )
            log_debug(logger, "–¢–µ–∫—Å—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ —Å–æ–∑–¥–∞–Ω/–æ–±–Ω–æ–≤–ª–µ–Ω")
            
            log_info(logger, "–¢–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        except Exception as e:
            log_error(logger, e, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –ø–æ–ª–µ–π")
            log_debug(logger, f"Traceback: {traceback.format_exc()}")

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–Ω–∏–≥–∏
        try:
            log_debug(logger, "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–Ω–∏–≥")
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–Ω–∏–≥–∏ –≤ –±–∞–∑–µ
            book_count = Books.select().count()
            log_debug(logger, f"–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥ –≤ –±–∞–∑–µ: {book_count}")
            
            if book_count == 0:
                test_books = [
                    {
                        'name': '–ë–∏–±–ª–∏—è',
                        'author': '–°–≤—è—â–µ–Ω–Ω–æ–µ –ü–∏—Å–∞–Ω–∏–µ',
                        'price': 1000.0,
                        'description': '–°–≤—è—â–µ–Ω–Ω–æ–µ –ü–∏—Å–∞–Ω–∏–µ –í–µ—Ç—Ö–æ–≥–æ –∏ –ù–æ–≤–æ–≥–æ –ó–∞–≤–µ—Ç–∞',
                        'photo': 'bible.jpg',
                        'quantity': 10
                    },
                    {
                        'name': '–ú–æ–ª–∏—Ç–≤–æ—Å–ª–æ–≤',
                        'author': '–ü—Ä–∞–≤–æ—Å–ª–∞–≤–Ω–∞—è –¶–µ—Ä–∫–æ–≤—å',
                        'price': 500.0,
                        'description': '–°–±–æ—Ä–Ω–∏–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã—Ö –º–æ–ª–∏—Ç–≤',
                        'photo': 'prayer_book.jpg',
                        'quantity': 15
                    },
                    {
                        'name': '–ó–∞–∫–æ–Ω –ë–æ–∂–∏–π',
                        'author': '–ü—Ä–æ—Ç–æ–∏–µ—Ä–µ–π –°–µ—Ä–∞—Ñ–∏–º –°–ª–æ–±–æ–¥—Å–∫–æ–π',
                        'price': 800.0,
                        'description': '–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –¥–ª—è —Å–µ–º—å–∏ –∏ —à–∫–æ–ª—ã',
                        'photo': 'law_of_god.jpg',
                        'quantity': 8
                    },
                    {
                        'name': '–ñ–∏—Ç–∏—è –°–≤—è—Ç—ã—Ö',
                        'author': '–°–≤—è—Ç–∏—Ç–µ–ª—å –î–∏–º–∏—Ç—Ä–∏–π –†–æ—Å—Ç–æ–≤—Å–∫–∏–π',
                        'price': 1200.0,
                        'description': '–°–±–æ—Ä–Ω–∏–∫ –∂–∏—Ç–∏–π —Å–≤—è—Ç—ã—Ö —É–≥–æ–¥–Ω–∏–∫–æ–≤ –ë–æ–∂–∏–∏—Ö',
                        'photo': 'lives_of_saints.jpg',
                        'quantity': 5
                    },
                    {
                        'name': '–ü—Å–∞–ª—Ç–∏—Ä—å',
                        'author': '–¶–∞—Ä—å –î–∞–≤–∏–¥',
                        'price': 600.0,
                        'description': '–ö–Ω–∏–≥–∞ –ø—Å–∞–ª–º–æ–≤ —Ü–∞—Ä—è –î–∞–≤–∏–¥–∞',
                        'photo': 'psalter.jpg',
                        'quantity': 12
                    }
                ]
                
                for book_data in test_books:
                    try:
                        Books.create(**book_data)
                        log_debug(logger, f"–°–æ–∑–¥–∞–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–≥–∞: {book_data['name']}")
                    except Exception as e:
                        log_error(logger, e, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–Ω–∏–≥–∏ {book_data['name']}")
                        log_debug(logger, f"Traceback: {traceback.format_exc()}")
                
                log_info(logger, "–¢–µ—Å—Ç–æ–≤—ã–µ –∫–Ω–∏–≥–∏ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã")
        except Exception as e:
            log_error(logger, e, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–Ω–∏–≥")
            log_debug(logger, f"Traceback: {traceback.format_exc()}")
        
        log_info(logger, "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    except Exception as e:
        log_error(logger, e, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
        log_debug(logger, f"Traceback: {traceback.format_exc()}")
        raise

async def main():
    try:
        log_info(logger, "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
        db.init('books.db')
        db.connect()
        initialize_database_and_data() # –í—ã–∑—ã–≤–∞–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥ –¥–ª—è –±–æ—Ç–∞
        commands_for_bot = [
            BotCommand(command="start", description="–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
            BotCommand(command="help", description="–ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å")
        ]
        
        log_debug(logger, "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞", {"commands": commands_for_bot})
        await bot.set_my_commands(commands=commands_for_bot, scope=BotCommandScopeAllPrivateChats())
        
        log_info(logger, "–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞")
        await dp.start_polling(bot)
    except Exception as e:
        log_error(logger, e, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞")
        raise
    finally:
        if not db.is_closed():
            log_debug(logger, "–ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö")
            db.close()

if __name__ == "__main__":
    try:
        log_info(logger, "–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        asyncio.run(main())
    except Exception as e:
        log_error(logger, e, "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        raise
